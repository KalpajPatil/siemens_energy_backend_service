services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: checkin_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - checkin-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    # Official Apache Kafka image
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      # Required for KRaft (Kafka Raft Metadata) mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092,CONTROLLER://:9093
      # Advertised listeners for external and internal use
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # Generate a cluster ID on first run (important)
      KAFKA_CLUSTER_ID: $${KAFKA_CLUSTER_ID:-$(/bin/kafka-storage random-uuid)}
      KAFKA_LOG_DIRS: /opt/kafka/data/logs
      KAFKA_STORAGE_DIRS: /opt/kafka/data/meta,/opt/kafka/data/logs

      # Topic Configuration
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

    volumes:
      # Updated volume path for the official image
      - kafka_data:/opt/kafka/data
    networks:
      - checkin-network
    healthcheck:
      # Kafka healthcheck often involves listing topics
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list" ]
      interval: 15s
      timeout: 10s
      retries: 5

  checkin-service:
    build:
      context: .
    container_name: checkin-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/checkin_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_PROFILES_ACTIVE: container
    ports:
      - "8084:8084"  # Changed to match Spring Boot default port
    networks:
      - checkin-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  kafka_data:

networks:
  checkin-network:
    driver: bridge